name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build JAR
        run: |
          mvn clean install -DskipTests
          mkdir -p $GITHUB_WORKSPACE/artifacts
          cp target/*.jar $GITHUB_WORKSPACE/artifacts

      - name: Upload JAR artifacts
        uses: actions/upload-artifact@v2
        with:
          name: jars
          path: target/

  test:
    runs-on: ubuntu-latest
    needs: compile
    strategy:
      matrix:
        maven_version: [3.6.3]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK and Maven
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Run Unit Tests
        run: mvn clean test -Dspring.profiles.active=unittest

      - name: Run Integration Tests
        run: mvn clean verify -Pintegration-tests -Dspring.profiles.active=unittest

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download JAR artifacts
        uses: actions/download-artifact@v2
        with:
          name: jars
          path: target/

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v2

      - name: Log in to Docker Hub
        run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

      - name: Build and Push Docker Image
        run: |
          echo "Compiling the code..."
          docker build --pull -t "$DOCKER_REGISTRY_IMAGE:AudioPlayer" .
          echo "Pushing Docker image..."
          docker push "$DOCKER_REGISTRY_IMAGE:AudioPlayer"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download JAR artifacts
        uses: actions/download-artifact@v2
        with:
          name: jars
          path: target/

      - name: Set up Docker
        uses: actions/setup-docker@v2

      - name: Log in to Docker Hub
        run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

      - name: Deploy to Production
        run: |
          echo "Deploying application..."
          docker run -d -p 8080:80 "$DOCKER_REGISTRY_IMAGE:AudioPlayer"
